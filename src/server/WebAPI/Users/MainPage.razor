@using WebAPI.Infrastructure.Ui;

<!DOCTYPE html>
<html lang="en" data-bs-theme="auto">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width =device-width, initial-scale=1.0">
    <script src="https://unpkg.com/htmx.org@1.9.6" integrity="sha384-FhXw7b6AlE/jyjlZH5iHa/tTe9EpJ1Y55RjcgPbjeWMskSxZt1v9qkxLJWNJaGni" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/htmx.org/dist/ext/json-enc.js"></script>
    <script src="https://unpkg.com/htmx.org@1.9.12/dist/ext/path-params.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />
</head>

<body class="mb-5">
    <Navbar Text="Welcome!"></Navbar>
    <Sidebar>
        <Content>
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.Collaborators.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-people-fill"
                         Text=@WebAPI.Collaborators.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.CollaboratorRoles.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-person-vcard-fill"
                         Text=@WebAPI.CollaboratorRoles.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.Clients.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi bi-wallet-fill"
                         Text=@WebAPI.Clients.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.Proformas.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi bi-file-text-fill"
                         Text=@WebAPI.Proformas.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.Invoices.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-receipt"
                         Text=@WebAPI.Invoices.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.CollaboratorPayments.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-credit-card-2-back-fill"
                         Text=@WebAPI.CollaboratorPayments.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.Collections.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-coin"
                         Text=@WebAPI.Collections.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.Transactions.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-journals"
                         Text=@WebAPI.Transactions.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.BankBalance.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-bank"
                         Text=@WebAPI.BankBalance.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.CollaboratorBalance.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-file-earmark-person"
                         Text=@WebAPI.CollaboratorBalance.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.PayrollPayments.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-paypal"
                         Text=@WebAPI.PayrollPayments.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.MoneyExchanges.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-currency-exchange"
                         Text=@WebAPI.MoneyExchanges.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.TaxPayments.Endpoints.List.AddListParameters(), $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-stripe"
                         Text=@WebAPI.TaxPayments.Endpoints.Title />
            <SidebarLink HtmxProps=@(new HtmxProps(WebAPI.ScheduleTasks.Endpoints.List, $"#{Workspace}") { OnClick = "highlight_sidebarlink(this);" })
                         Icon="bi bi-rocket-takeoff"
                         Text=@WebAPI.ScheduleTasks.Endpoints.Title />
        </Content>
    </Sidebar>
    <main style="padding-left: 16.25rem; padding-top:3.875rem">
        <div class="container-fluid p-4" id=@Workspace>
        </div>
    </main>
    <Toast Id="success-toast" Type=Toast.ToastType.Success />
    <Toast Id="error-toast" Type=Toast.ToastType.Error />
    <div id="modal" class="modal fade">
        <div id=@Dialog class="modal-dialog"></div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        ; (function () {

            const errorToastElement = document.getElementById("error-toast")
            const errorToastBody = errorToastElement.querySelector(".toast-body")
            const errorToast = bootstrap.Toast.getOrCreateInstance(errorToastElement)

            htmx.on("htmx:responseError", (e) => {
                errorToastBody.innerText = e.detail.xhr.response
                errorToast.show()
            })

            const successToastElement = document.getElementById("success-toast")
            const successToastBody = successToastElement.querySelector(".toast-body")
            const sucessToast = bootstrap.Toast.getOrCreateInstance(successToastElement)

            htmx.on("successMessageEvent", (e) => {
                successToastBody.innerText = e.detail.value
                sucessToast.show()
            })

            const modal = bootstrap.Modal.getOrCreateInstance(document.getElementById("modal"))

            htmx.on("openModalEvent", (e) => {
                modal.show()
            })

            htmx.on("closeModalEvent", (e) => {
                modal.hide()
            })

            htmx.on("hidden.bs.modal", () => {
                document.getElementById(@Dialog).innerHTML = ""
            })
        })()

        function highlight_row(el) {
            var row = el.closest('tr');
            var rows = el.closest('table').getElementsByTagName('tr');
            for (var index = 0; index < rows.length; index++) {
                rows[index].classList.remove('table-active');
            }
            rows[row.rowIndex].classList.add("table-active");
        }
        function highlight_sidebarlink(el) {
            var li = el.closest('li');
            let lis = Array.from(li.closest('ul').children)
            let liId = lis.indexOf(li);
            for (var index = 0; index < lis.length; index++) {
                lis[index].children[0].classList.remove('active');
                lis[index].children[0].classList.add('link-dark');
            }
            lis[liId].children[0].classList.add("active");
            lis[liId].children[0].classList.remove("link-dark");
        }
        function clean_select(id) {
            var selectobject = document.getElementById(id);
            for (var i = 0; i < selectobject.length; i++) {
                selectobject.remove(i);
            }
        }

    </script>
</body>
</html>
@code {
    public const string Workspace = "workspace";

    public const string Dialog = "dialog";
}