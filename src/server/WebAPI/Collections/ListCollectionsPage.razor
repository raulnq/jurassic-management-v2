@using WebAPI.Clients
@using WebAPI.Invoices;
@using WebAPI.Infrastructure.SqlKata;
@using WebAPI.Infrastructure.Ui;
@using global::Infrastructure

<Heading Text=@Endpoints.Title />
<Breadcrumbs Links=@(new []{new Breadcrumbs.Link(Endpoints.ListTitle)})
             Target=@($"#{WebAPI.Users.MainPage.Workspace}") />
<Toolbar>
    <Actions>
        <ActionButton Text=@InvoiceToCollectionProcesses.Endpoints.RegisterTitle
                      Icon=@Icons.Add
                      HtmxProps=@(new HtmxProps(InvoiceToCollectionProcesses.Endpoints.Register, $"#{WebAPI.Users.MainPage.Workspace}")) />
    </Actions>
</Toolbar>
<Section>
    <Content>
        <FormRow>
            <Content>
                <div class="col-6">
                    <SelectFilter HtmxProps=@(new HtmxProps(Endpoints.List, $"#{List}",Swap.OuterHTML,$"#{List}"){ Include=$"#{nameof(ListCollections.Query.ClientId)}"})
                                  Label="Status"
                                  Property=@(nameof(ListCollections.Query.Status))
                                  Query=@Query
                                  EmptyLabel="All Status"
                                  Source=@(Enum.GetValues<CollectionStatus>().ToDictionary(i=>i.ToString(), i=>i.ToString()))>
                    </SelectFilter>
                </div>
                <div class="col-6">
                    <SelectFilter HtmxProps=@(new HtmxProps(Endpoints.List, $"#{List}",Swap.OuterHTML,$"#{List}"){ Include=$"#{nameof(ListCollections.Query.Status)}"})
                                  Label="Client"
                                  Property=@(nameof(ListCollections.Query.ClientId))
                                  Query=@Query
                                  EmptyLabel="All Clients"
                                  EmptyValue="00000000-0000-0000-0000-000000000000"
                                  Source=@(Clients.ToDictionary(i=>i.ClientId.ToString(), i=>i.Name))>
                    </SelectFilter>
                </div>
            </Content>
        </FormRow>
        <div id=@List>
            <DataTable TResult=ListCollections.Result
                       Result=@Result.Items
                       Context="item">
                <TableHeader>
                    <th></th>
                    <th class="text-center">#</th>
                    <th>Client</th>
                    <th>Currency</th>
                    <th class="text-end">Total</th>
                    <th class="text-end">Commission</th>
                    <th>Number</th>
                    <th>Status</th>
                </TableHeader>
                <RowTemplate>
                    <RowToolbar>
                        <Actions>
                            <ActionLink HtmxProps=@(new HtmxProps(Endpoints.View, $"#{WebAPI.Users.MainPage.Workspace}"){Vals=$$"""{"collectionId":"{{item.CollectionId}}"}"""})
                                        Icon=@Icons.View />
                        </Actions>
                    </RowToolbar>
                    <td>@item.CollectionId</td>
                    <td>@item.ClientName</td>
                    <td>@item.Currency</td>
                    <td class="text-end">@item.Total.ToMoneyFormat()</td>
                    <td class="text-end">@item.Commission.ToMoneyFormat()</td>
                    <td>@item.Number</td>
                    <td>@item.Status</td>
                </RowTemplate>
            </DataTable>
            <Pagination Query=@Query
                        Result=@Result
                        HtmxProps=@(new HtmxProps(Endpoints.List, $"#{List}", Swap.OuterHTML, $"#{List}"))
                        Parameters=@(new KeyValuePair<string, object?>[]{ new (nameof(ListCollections.Query.Status), Query.Status),new (nameof(ListCollections.Query.ClientId), Query.ClientId)}) />
        </div>
    </Content>
</Section>
@code {
    [Parameter, EditorRequired]
    public ListResults<ListCollections.Result> Result { get; set; } = default!;
    [Parameter, EditorRequired]
    public ListCollections.Query Query { get; set; } = default!;
    [Parameter, EditorRequired]
    public IEnumerable<Client> Clients { get; set; } = default!;

    public const string List = "collection-list-target";
}
